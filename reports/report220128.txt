From: AKASHI Takahiro <takahiro.akashi@linaro.org>
To: private-kwg@linaro.org, alex.bennee@linaro.org
Cc: 
Bcc: 
Subject: [Weekly] Week ending 2022-01-28
Reply-To: 

Stratos
=======
[STR-68] (network latency behaviour with VMs)
* continued to learn basic network technologies, including
  TSN, XDP and SR-IOV (for virtual network).

* I'm going to write down some document[1] to summarise my task here.

  -> no activities this week as I focused on U-Boot tasks.

[1] https://docs.google.com/presentation/d/1iik_AK2lUcYhuhavd4mk9EF2A84m4QfFX2906ucz1XQ/edit?usp=sharing

[STR-41] (Implement SVC/HV passthrough for Xen on ARM64)
* No progress

[STR-70] (Check the status of eBPF for ARM64)
* No progress

[STR-66]
* hypervisor-less virtio
* virtio-over-argo
  No progress

U-Boot support
==============
[TS-118]
- UEFI-DM(U-Boot's driver model) integration, RFCv2[2]
  As Simon pinged me, I double-checked for remaining issues in all comments.
  Now that I have addressed them (mostly trivial ones), I will be able
  to submit a new version next week unless Simon wants to update his
  own patch included in this patch series.

[TS-102]
- mkeficapsule revamp v9[3]
  Heinrich raised his concern about license conflict again; GPL vs. openssl.
  (Please note that openssl uses its own BSD-like license terms before v3,
  and its home page (FAQ)[4] shows its view, saying it can be used with GPL.)

  This problem exists even with other U-Boot host tools like "mkimage",
  which is also under GPLv2+ and linked with openssl library.
  So I have thought that allowing users to remove the library linking
  in the build with !CONFIG_TOOLS_LIBCRYPTO would be enough as "mkimage does.
  He seems not to like this approach.

  There are a couple of workarounds:
  1) change the license to a more permissive one (BSD?)
  2) add an explicit exemption for openssl library
  3) use another crypto library like gnutls

  I have researched various comments around this issue but not decided yet
  which way to go.

(MISC)
* Ilias raised some concerns(bugs?) about the authentication algorithm
  in UEFI secure boot. I'm going to review his comments next week.

* "removable media" support on UEFI bootmanager RFC[5].
* Device path creation improvement for USB device[6]
  I was carefully watching the discussion about Simon's standard boot[7]
  as he was trying to re-implement UEFI boot manager's function in
  his approach.
  The only extra feature that is implemented by distro_bootcmd script
  and not implemented by "bootefi bootmgr" command is "removable media"
  support.

  His patch appears not to be welcomed by other engineers.
  Depending on the result of discussion, someone may urge me to
  push forward my patch. So I was thinking of doable solution
  to the issue below.

  The main issue in my patch is how a "removable media" (and fixed
  media) should be represented as a form of UEFI device path.
  A current device path representation on U-Boot UEFI is generated by
  reflecting U-Boot's driver model (or device hierarchy), while
  a representation on EDK-II is based on its own driver model and then
  both representations are incompatible.

  The same USB hard disk is represented in
     EDK2: PciRoot(0x0)/Pci(0x2,0x0)/USB(0x2,0x0)
                /HD(1,GPT,CE86C5A7-B32A-488F-A346-88FE698E0EDC,0x22,0x4C2A)
     U-Boot: /VenHw(e61d73b9-a384-4acc-aeab-82e828f3628b)
                /UsbClass(0x0,0x0,0x9,0x0,0x3)/UsbClass(0x46f4,0x1,0x0,0x0,0x0)
                /HD(1,GPT,ce86c5a7-b32a-488f-a346-88fe698e0edc,0x22,0x4c2a)

  Second, U-Boot originally uses its own device representation on
  command lines, like "usb 0:1". Those numbers, however, are dynamically
  assigned at runtime and varied from time to time, while a resulting
  device path internally generated from this form has a absolute device name.

  root          0  [ + ]   root_driver           root_driver
  pci           0  [ + ]   pci_generic_ecam      |-- pcie@10000000
  usb           0  [ + ]   xhci_pci              |   `-- xhci_pci
  usb_hub       0  [ + ]   usb_hub               |       `-- usb_hub
  usb_mass_s    0  [ + ]   usb_mass_storage      |           |-- usb_mass_storage
  blk           0  [ + ]   usb_storage_blk       |           |   `-- usb_mass_storage.lun0

  Third, there is no direct way to represent a place (interface/port) to
  which an actual device is attached. For instance, we cannot specify
  "we want to boot the system from HD on USB port-0 or from CD-ROM drive".

[3] https://lists.denx.de/pipermail/u-boot/2021-December/469416.html
[4] https://www.openssl.org/docs/faq.html#LEGAL2
[5] https://lists.denx.de/pipermail/u-boot/2021-November/466583.html
[6] https://lists.denx.de/pipermail/u-boot/2021-November/468216.html
[7] https://lists.denx.de/pipermail/u-boot/2022-January/472425.html

=== Patch status ===
    uboot/cap auth v9: submitted on 1/18
    uboot/disk_integ rfc2: submitted on 12/10
    uboot/uefi removable rfc: submitted on 11/09

=== Issues ===
* boards (MachiatoBin)
  I've got the delivery at the end of December, but the order
  was wrong; the package contained only one SingleShot board.
  I asked Shimada-san to re-order the boards. A new delivery
  date would be early February.

=== Travel&Holiday&Event ===
Feb 11: National Foundation Day (public holiday)
Feb 23: Emperor's Birthday (public holiday)

